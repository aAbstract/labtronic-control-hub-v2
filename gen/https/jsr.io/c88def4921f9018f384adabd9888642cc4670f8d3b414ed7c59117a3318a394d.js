// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
import { assertIsError } from "./is_error.ts";
import { AssertionError } from "./assertion_error.ts";
export function assertThrows(fn, errorClassOrMsg, msgIncludesOrMsg, msg) {
  // deno-lint-ignore no-explicit-any
  let ErrorClass;
  let msgIncludes;
  let err;
  if (typeof errorClassOrMsg !== "string") {
    if (errorClassOrMsg === undefined || errorClassOrMsg?.prototype instanceof Error || errorClassOrMsg?.prototype === Error.prototype) {
      ErrorClass = errorClassOrMsg;
      msgIncludes = msgIncludesOrMsg;
    } else {
      msg = msgIncludesOrMsg;
    }
  } else {
    msg = errorClassOrMsg;
  }
  let doesThrow = false;
  const msgSuffix = msg ? `: ${msg}` : ".";
  try {
    fn();
  } catch (error) {
    if (ErrorClass) {
      if (error instanceof Error === false) {
        throw new AssertionError(`A non-Error object was thrown${msgSuffix}`);
      }
      assertIsError(error, ErrorClass, msgIncludes, msg);
    }
    err = error;
    doesThrow = true;
  }
  if (!doesThrow) {
    msg = `Expected function to throw${msgSuffix}`;
    throw new AssertionError(msg);
  }
  return err;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vanNyLmlvL0BzdGQvYXNzZXJ0LzEuMC42L3Rocm93cy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxOC0yMDI0IHRoZSBEZW5vIGF1dGhvcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIE1JVCBsaWNlbnNlLlxuLy8gVGhpcyBtb2R1bGUgaXMgYnJvd3NlciBjb21wYXRpYmxlLlxuaW1wb3J0IHsgYXNzZXJ0SXNFcnJvciB9IGZyb20gXCIuL2lzX2Vycm9yLnRzXCI7XG5pbXBvcnQgeyBBc3NlcnRpb25FcnJvciB9IGZyb20gXCIuL2Fzc2VydGlvbl9lcnJvci50c1wiO1xuXG4vKipcbiAqIEV4ZWN1dGVzIGEgZnVuY3Rpb24sIGV4cGVjdGluZyBpdCB0byB0aHJvdy4gSWYgaXQgZG9lcyBub3QsIHRoZW4gaXRcbiAqIHRocm93cy5cbiAqXG4gKiBUbyBhc3NlcnQgdGhhdCBhbiBhc3luY2hyb25vdXMgZnVuY3Rpb24gcmVqZWN0cywgdXNlXG4gKiB7QGxpbmtjb2RlIGFzc2VydFJlamVjdHN9LlxuICpcbiAqIEBleGFtcGxlIFVzYWdlXG4gKiBgYGB0cyBpZ25vcmVcbiAqIGltcG9ydCB7IGFzc2VydFRocm93cyB9IGZyb20gXCJAc3RkL2Fzc2VydFwiO1xuICpcbiAqIGFzc2VydFRocm93cygoKSA9PiB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJoZWxsbyB3b3JsZCFcIik7IH0pOyAvLyBEb2Vzbid0IHRocm93XG4gKiBhc3NlcnRUaHJvd3MoKCkgPT4gY29uc29sZS5sb2coXCJoZWxsbyB3b3JsZCFcIikpOyAvLyBUaHJvd3NcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBmbiBUaGUgZnVuY3Rpb24gdG8gZXhlY3V0ZS5cbiAqIEBwYXJhbSBtc2cgVGhlIG9wdGlvbmFsIG1lc3NhZ2UgdG8gZGlzcGxheSBpZiB0aGUgYXNzZXJ0aW9uIGZhaWxzLlxuICogQHJldHVybnMgVGhlIGVycm9yIHRoYXQgd2FzIHRocm93bi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydFRocm93cyhcbiAgZm46ICgpID0+IHVua25vd24sXG4gIG1zZz86IHN0cmluZyxcbik6IHVua25vd247XG4vKipcbiAqIEV4ZWN1dGVzIGEgZnVuY3Rpb24sIGV4cGVjdGluZyBpdCB0byB0aHJvdy4gSWYgaXQgZG9lcyBub3QsIHRoZW4gaXRcbiAqIHRocm93cy4gQW4gZXJyb3IgY2xhc3MgYW5kIGEgc3RyaW5nIHRoYXQgc2hvdWxkIGJlIGluY2x1ZGVkIGluIHRoZVxuICogZXJyb3IgbWVzc2FnZSBjYW4gYWxzbyBiZSBhc3NlcnRlZC5cbiAqXG4gKiBUbyBhc3NlcnQgdGhhdCBhbiBhc3luY2hyb25vdXMgZnVuY3Rpb24gcmVqZWN0cywgdXNlXG4gKiB7QGxpbmtjb2RlIGFzc2VydFJlamVjdHN9LlxuICpcbiAqIEBleGFtcGxlIFVzYWdlXG4gKiBgYGB0cyBpZ25vcmVcbiAqIGltcG9ydCB7IGFzc2VydFRocm93cyB9IGZyb20gXCJAc3RkL2Fzc2VydFwiO1xuICpcbiAqIGFzc2VydFRocm93cygoKSA9PiB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJoZWxsbyB3b3JsZCFcIik7IH0sIFR5cGVFcnJvcik7IC8vIERvZXNuJ3QgdGhyb3dcbiAqIGFzc2VydFRocm93cygoKSA9PiB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJoZWxsbyB3b3JsZCFcIik7IH0sIFJhbmdlRXJyb3IpOyAvLyBUaHJvd3NcbiAqIGBgYFxuICpcbiAqIEB0eXBlUGFyYW0gRSBUaGUgZXJyb3IgY2xhc3MgdG8gYXNzZXJ0LlxuICogQHBhcmFtIGZuIFRoZSBmdW5jdGlvbiB0byBleGVjdXRlLlxuICogQHBhcmFtIEVycm9yQ2xhc3MgVGhlIGVycm9yIGNsYXNzIHRvIGFzc2VydC5cbiAqIEBwYXJhbSBtc2dJbmNsdWRlcyBUaGUgc3RyaW5nIHRoYXQgc2hvdWxkIGJlIGluY2x1ZGVkIGluIHRoZSBlcnJvciBtZXNzYWdlLlxuICogQHBhcmFtIG1zZyBUaGUgb3B0aW9uYWwgbWVzc2FnZSB0byBkaXNwbGF5IGlmIHRoZSBhc3NlcnRpb24gZmFpbHMuXG4gKiBAcmV0dXJucyBUaGUgZXJyb3IgdGhhdCB3YXMgdGhyb3duLlxuICovXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0VGhyb3dzPEUgZXh0ZW5kcyBFcnJvciA9IEVycm9yPihcbiAgZm46ICgpID0+IHVua25vd24sXG4gIC8vIGRlbm8tbGludC1pZ25vcmUgbm8tZXhwbGljaXQtYW55XG4gIEVycm9yQ2xhc3M6IGFic3RyYWN0IG5ldyAoLi4uYXJnczogYW55W10pID0+IEUsXG4gIG1zZ0luY2x1ZGVzPzogc3RyaW5nLFxuICBtc2c/OiBzdHJpbmcsXG4pOiBFO1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydFRocm93czxFIGV4dGVuZHMgRXJyb3IgPSBFcnJvcj4oXG4gIGZuOiAoKSA9PiB1bmtub3duLFxuICBlcnJvckNsYXNzT3JNc2c/OlxuICAgIC8vIGRlbm8tbGludC1pZ25vcmUgbm8tZXhwbGljaXQtYW55XG4gICAgfCAoYWJzdHJhY3QgbmV3ICguLi5hcmdzOiBhbnlbXSkgPT4gRSlcbiAgICB8IHN0cmluZyxcbiAgbXNnSW5jbHVkZXNPck1zZz86IHN0cmluZyxcbiAgbXNnPzogc3RyaW5nLFxuKTogRSB8IEVycm9yIHwgdW5rbm93biB7XG4gIC8vIGRlbm8tbGludC1pZ25vcmUgbm8tZXhwbGljaXQtYW55XG4gIGxldCBFcnJvckNsYXNzOiAoYWJzdHJhY3QgbmV3ICguLi5hcmdzOiBhbnlbXSkgPT4gRSkgfCB1bmRlZmluZWQ7XG4gIGxldCBtc2dJbmNsdWRlczogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICBsZXQgZXJyO1xuXG4gIGlmICh0eXBlb2YgZXJyb3JDbGFzc09yTXNnICE9PSBcInN0cmluZ1wiKSB7XG4gICAgaWYgKFxuICAgICAgZXJyb3JDbGFzc09yTXNnID09PSB1bmRlZmluZWQgfHxcbiAgICAgIGVycm9yQ2xhc3NPck1zZz8ucHJvdG90eXBlIGluc3RhbmNlb2YgRXJyb3IgfHxcbiAgICAgIGVycm9yQ2xhc3NPck1zZz8ucHJvdG90eXBlID09PSBFcnJvci5wcm90b3R5cGVcbiAgICApIHtcbiAgICAgIEVycm9yQ2xhc3MgPSBlcnJvckNsYXNzT3JNc2c7XG4gICAgICBtc2dJbmNsdWRlcyA9IG1zZ0luY2x1ZGVzT3JNc2c7XG4gICAgfSBlbHNlIHtcbiAgICAgIG1zZyA9IG1zZ0luY2x1ZGVzT3JNc2c7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIG1zZyA9IGVycm9yQ2xhc3NPck1zZztcbiAgfVxuICBsZXQgZG9lc1Rocm93ID0gZmFsc2U7XG4gIGNvbnN0IG1zZ1N1ZmZpeCA9IG1zZyA/IGA6ICR7bXNnfWAgOiBcIi5cIjtcbiAgdHJ5IHtcbiAgICBmbigpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGlmIChFcnJvckNsYXNzKSB7XG4gICAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA9PT0gZmFsc2UpIHtcbiAgICAgICAgdGhyb3cgbmV3IEFzc2VydGlvbkVycm9yKGBBIG5vbi1FcnJvciBvYmplY3Qgd2FzIHRocm93biR7bXNnU3VmZml4fWApO1xuICAgICAgfVxuICAgICAgYXNzZXJ0SXNFcnJvcihcbiAgICAgICAgZXJyb3IsXG4gICAgICAgIEVycm9yQ2xhc3MsXG4gICAgICAgIG1zZ0luY2x1ZGVzLFxuICAgICAgICBtc2csXG4gICAgICApO1xuICAgIH1cbiAgICBlcnIgPSBlcnJvcjtcbiAgICBkb2VzVGhyb3cgPSB0cnVlO1xuICB9XG4gIGlmICghZG9lc1Rocm93KSB7XG4gICAgbXNnID0gYEV4cGVjdGVkIGZ1bmN0aW9uIHRvIHRocm93JHttc2dTdWZmaXh9YDtcbiAgICB0aHJvdyBuZXcgQXNzZXJ0aW9uRXJyb3IobXNnKTtcbiAgfVxuICByZXR1cm4gZXJyO1xufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDBFQUEwRTtBQUMxRSxxQ0FBcUM7QUFDckMsU0FBUyxhQUFhLFFBQVEsZ0JBQWdCO0FBQzlDLFNBQVMsY0FBYyxRQUFRLHVCQUF1QjtBQXVEdEQsT0FBTyxTQUFTLGFBQ2QsRUFBaUIsRUFDakIsZUFHVSxFQUNWLGdCQUF5QixFQUN6QixHQUFZO0VBRVosbUNBQW1DO0VBQ25DLElBQUk7RUFDSixJQUFJO0VBQ0osSUFBSTtFQUVKLElBQUksT0FBTyxvQkFBb0IsVUFBVTtJQUN2QyxJQUNFLG9CQUFvQixhQUNwQixpQkFBaUIscUJBQXFCLFNBQ3RDLGlCQUFpQixjQUFjLE1BQU0sU0FBUyxFQUM5QztNQUNBLGFBQWE7TUFDYixjQUFjO0lBQ2hCLE9BQU87TUFDTCxNQUFNO0lBQ1I7RUFDRixPQUFPO0lBQ0wsTUFBTTtFQUNSO0VBQ0EsSUFBSSxZQUFZO0VBQ2hCLE1BQU0sWUFBWSxNQUFNLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxHQUFHO0VBQ3JDLElBQUk7SUFDRjtFQUNGLEVBQUUsT0FBTyxPQUFPO0lBQ2QsSUFBSSxZQUFZO01BQ2QsSUFBSSxpQkFBaUIsVUFBVSxPQUFPO1FBQ3BDLE1BQU0sSUFBSSxlQUFlLENBQUMsNkJBQTZCLEVBQUUsVUFBVSxDQUFDO01BQ3RFO01BQ0EsY0FDRSxPQUNBLFlBQ0EsYUFDQTtJQUVKO0lBQ0EsTUFBTTtJQUNOLFlBQVk7RUFDZDtFQUNBLElBQUksQ0FBQyxXQUFXO0lBQ2QsTUFBTSxDQUFDLDBCQUEwQixFQUFFLFVBQVUsQ0FBQztJQUM5QyxNQUFNLElBQUksZUFBZTtFQUMzQjtFQUNBLE9BQU87QUFDVCJ9
// denoCacheMetadata=13050904759223550351,15167085586089572524