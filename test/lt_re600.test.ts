import { DeviceMsg } from "../src/common/models";
import { LtdDriverFloatSequence } from "../src/main/device_drivers/ltd_driver_fltsq";
import { LT_RE600_DRIVER_CONFIG } from "../src/main/device_drivers/lt_re600";

const TEST_LT_RE600_PACKET = new Uint8Array([
    0x99, 0x99, 0x7F, 0x00,
    0x00, 0xC8, 0x42, 0x00,
    0x00, 0x5C, 0x43, 0x00,
    0x00, 0x5C, 0x43, 0x00,
    0x00, 0x5C, 0x43, 0x00,
    0x00, 0x5C, 0x43, 0xCD,
    0xCC, 0x8C, 0x3F, 0x66,
    0x66, 0x66, 0x3F, 0x00,
    0x00, 0x00, 0x3F, 0x00,
    0x00, 0xA0, 0x3F, 0x00,
    0x00, 0xA0, 0x3F, 0x00,
    0x00, 0x20, 0x41, 0x00,
    0x00, 0x16, 0x43, 0x66,
    0x66, 0x66, 0x3F, 0x00,
    0x00, 0x48, 0x42, 0x00,
    0x00, 0x5C, 0x43, 0x00,
    0x00, 0x80, 0x3F, 0x00,
    0x00, 0x5C, 0x43, 0x00,
    0x00, 0x5C, 0x43, 0x00,
    0x00, 0x5C, 0x43, 0x66,
    0x66, 0x66, 0x3F, 0x00,
    0x00, 0x40, 0x41, 0x00,
    0x00, 0x40, 0x40, 0x00,
    0x00, 0x10, 0x42, 0x00,
    0x00, 0x40, 0x41, 0x00,
    0x00, 0x80, 0x3F, 0x00,
    0x00, 0x40, 0x41, 0x00,
    0x80, 0xBB, 0x44, 0x00,
    0x00, 0x40, 0x40, 0x00,
    0x00, 0x00, 0x42, 0x00,
    0x00, 0xC0, 0x42, 0x24,
    0xEB, 0x0D, 0x0A,
]);

const TARGET_VALUES = [
    100,    // TPH_Freq
    220,    // TPH_V12
    220,    // TPH_V32
    220,    // TPH_V31
    220,    // TPH_Ull_avg
    1.1,    // TPH_I1
    0.9,    // TPH_I2
    0.5,    // TPH_I3
    1.25,   // TPH_L_avg
    1.25,   // TPH_Sys_P
    10,     // TPH_Sys_Q
    150,    // TPH_Sys_S
    0.9,    // TPH_Sys_PF

    50,     // SPH_Freq
    220,    // SPH_V1
    1,      // SPH_I1
    220,    // Sys_P
    220,    // Sys_Q
    220,    // Sys_S
    0.9,    // Sys_PF

    12,     // BAT_V
    3,      // BAT_I
    36,     // BAT_P

    12,     // DCL_V
    1,      // DCL_I
    12,     // DCL_P

    1500,   // ACD_Freq
    3,      // ACD_I
    32,     // ACD_V
    96,     // ACD_P
];

test('lt_re600_decode_packet.', () => {
    const lt_re600_driver = new LtdDriverFloatSequence([0x99, 0x99], LT_RE600_DRIVER_CONFIG);
    const lt_re600_device_msg_list_res = lt_re600_driver.decode_packet(TEST_LT_RE600_PACKET);
    expect(lt_re600_device_msg_list_res.ok).toBeDefined();
    const lt_re600_device_msg_list = lt_re600_device_msg_list_res.ok as DeviceMsg[];
    lt_re600_device_msg_list.forEach((device_msg, idx) => {
        expect(device_msg.config).toEqual(LT_RE600_DRIVER_CONFIG[idx]);
        expect(device_msg.msg_value).toBe(TARGET_VALUES[idx]);
    });
});