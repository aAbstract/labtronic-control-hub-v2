// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.
import { equal } from "./equal.ts";
import { buildMessage } from "jsr:@std/internal@^1.0.4/build-message";
import { diff } from "jsr:@std/internal@^1.0.4/diff";
import { diffStr } from "jsr:@std/internal@^1.0.4/diff-str";
import { format } from "jsr:@std/internal@^1.0.4/format";

import { AssertionError } from "./assertion_error.ts";

/**
 * Make an assertion that `actual` and `expected` are equal, deeply. If not
 * deeply equal, then throw.
 *
 * Type parameter can be specified to ensure values under comparison have the
 * same type.
 *
 * @example Usage
 * ```ts ignore
 * import { assertEquals } from "@std/assert";
 *
 * assertEquals("world", "world"); // Doesn't throw
 * assertEquals("hello", "world"); // Throws
 * ```
 *
 * @typeParam T The type of the values to compare. This is usually inferred.
 * @param actual The actual value to compare.
 * @param expected The expected value to compare.
 * @param msg The optional message to display if the assertion fails.
 */
export function assertEquals<T>(
  actual: T,
  expected: T,
  msg?: string,
) {
  if (equal(actual, expected)) {
    return;
  }
  const msgSuffix = msg ? `: ${msg}` : ".";
  let message = `Values are not equal${msgSuffix}`;

  const actualString = format(actual);
  const expectedString = format(expected);
  const stringDiff = (typeof actual === "string") &&
    (typeof expected === "string");
  const diffResult = stringDiff
    ? diffStr(actual as string, expected as string)
    : diff(actualString.split("\n"), expectedString.split("\n"));
  const diffMsg = buildMessage(diffResult, { stringDiff }).join("\n");
  message = `${message}\n${diffMsg}`;
  throw new AssertionError(message);
}

// denoCacheMetadata={"headers":{"x-content-type-options":"nosniff","x-goog-metageneration":"1","date":"Sun, 09 Feb 2025 13:22:34 GMT","expires":"Mon, 09 Feb 2026 13:22:34 GMT","content-security-policy":"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';","content-length":"1791","x-goog-generation":"1727173874988317","x-jsr-cache-id":"MRS-fea0badd","etag":"\"d7bd89da4cbcff084243f855e5802fc8\"","x-jsr-cache-status":"miss","x-goog-storage-class":"STANDARD","x-robots-tag":"noindex","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","x-goog-stored-content-length":"1791","access-control-allow-origin":"*","access-control-expose-headers":"*","via":"1.1 google","server":"UploadServer","x-guploader-uploadid":"AHMx-iF9vVtWsX11t2NI6Q24C331K3eUwjG1M6Y7zN3gICoN9gWnJwClIr5W1Oc8DGITsLnapmltZ0k","content-type":"text/typescript","cache-control":"public, max-age=31536000, immutable","x-goog-hash":"crc32c=Narvtw==,md5=172J2ky8/whCQ/hV5YAvyA==","last-modified":"Tue, 24 Sep 2024 10:31:15 GMT","accept-ranges":"bytes","cross-origin-resource-policy":"cross-origin","x-goog-stored-content-encoding":"identity"},"url":"https://jsr.io/@std/assert/1.0.6/equals.ts","time":1739107354}